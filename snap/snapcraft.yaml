name: gmird
base: core20
summary: Gemini reader snap
description: |
  This is a Gemini reader made in Go. Ultimately, my goal is to deploy the mobile
  app to my Android phone mainly because the app I tried from the Play store
  seemed to immediately trigger some text messages from telemarketers. Since the
  Gemini protocol was designed to encourage simple implementations, it seemed
  friendly enough. I also want to keep parity with the terminal program and be
  able to run that inside a remote SSH connection.
  See https://github.com/shrmpy/gmi.git


confinement: strict
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf


version: "0.0.19"
grade: stable

apps:
  mobile:
    command: bin/desktop-launch $SNAP/bin/mobile
    plugs: [network,x11,unity7,opengl,home]

  term:
    command: bin/term
    plugs: [network,home]

parts:
  g-build:
    plugin: go
    source: .
    build-packages: 
    - git
    - libc6-dev
    - libglu1-mesa-dev
    - libgl1-mesa-dev
    - libxcursor-dev
    - libxi-dev
    - libxinerama-dev
    - libxrandr-dev
    - libxxf86vm-dev
    - libasound2-dev
    - pkg-config
    stage-packages: 
    - libgl1-mesa-glx
    - libxcursor1
    - libxi6
    - libxinerama1
    - libxrandr2
    - libxxf86vm1
    after: [desktop-glib-only]

  desktop-glib-only:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: glib-only
    source-depth: 1
    plugin: make
    build-packages:
      - libglib2.0-dev
    stage-packages:
      - libglib2.0-bin

  wrapper:
    plugin: dump
    source: snap/local
    organize:
      'config.json': 'example-config.json'

